   10 REM > LIFE
   11 
   20 REM ACORN USER MAY1988 P51
   30 DIM code &2200
   40 PROCsetup
   50 REPEAT
   60 CALL clear
   70 CLG
   80 MOUSE ON 1
   90 CLS
  100 PRINT"Use :-"''"Mouse to move"''"Left forliving cell"''"Right for countcell"''"<ESC> toplay"
  110 REPEAT
  120 MOUSE X%,Y%,F%
  130 PROCp(F%,X%,Y%)
  140 UNTIL INKEY(0)=27
  150 CLS
  160 PRINT"Press:-"''"<SPACE>"'"for nextgenera- tion"''
  170 PRINT"<ESC> toredesign"''
  180 PRINT"<SHIFT>-<ESC> toquit"
  190 MOUSE OFF
  200 REPEAT
  210 CALL generate
  220 UNTIL GET=27
  230 UNTIL INKEY-1
  240 *POINTER 0
  250 MODE 0
  260 END
  270 :
  280 DEFPROCsetup
  290 FOR pass%=0 TO 2 STEP 2
  300 P%=code
  310 [ OPT pass%
  320 .generate
  330 STMDB R13!,{R14}
  340 MOV R14,#&01F00000
  350 ORR R14,R14,#&000D8000
  360 ADR R0,map
  370 LDR R1,[R0,#0]
  380 EOR R2,R1,#1
  390 STR R2,[R0,#0]
  400 ADR R3,map+4
  410 ADD R12,R3,R1,LSL#12
  420 ADD R11,R3,R2,LSL#12
  430 MOV R2,#&3E
  440 .loop1
  450 MOV R1,#&3E
  460 ADD R7,R2,R2,LSL#2
  470 ADD R7,R14,R7,LSL#8
  480 ADD R7,R7,R1,LSL#2
  490 SUB R5,R2,#1
  500 ADD R8,R12,R5,LSL#6
  510 ADD R8,R8,#&3C
  520 LDR R4,[R8,#0]
  530 LDR R5,[R8,#64]
  540 LDR R6,[R8,#128]
  550 ADD R10,R1,R2,LSL#6
  560 MOV R4,R4,LSL#8
  570 MOV R5,R5,LSR#8
  580 MOV R6,R6,LSR#8
  590 LDRB R9,[R12,R10]
  600 B count
  610 .loop2
  620 ADD R10,R1,R2,LSL#6
  630 LDRB R9,[R12,R10]
  640 LDRB R0,[R8],#-1
  650 ORR R4,R0,R4,LSL#8
  660 LDRB R0,[R8,#65]
  670 ORR R5,R0,R5,LSL#8
  680 LDRB R0,[R8,#129]
  690 ORR R6,R0,R6,LSL#8
  700 .count
  710 MOV R0,#0
  720 TST R4,#&FF
  730 ADDNE R0,R0,#1
  740 TST R4,#&FF00
  750 ADDNE R0,R0,#1
  760 TST R4,#&00FF0000
  770 ADDNE R0,R0,#1
  780 TST R5,#&FF
  790 ADDNE R0,R0,#1
  800 TST R5,#&00FF0000
  810 ADDNE R0,R0,#1
  820 TST R6,#&FF
  830 ADDNE R0,R0,#1
  840 TST R6,#&FF00
  850 ADDNE R0,R0,#1
  860 TST R6,#&00FF0000
  870 ADDNE R0,R0,#1
  880 MOVS R9,R9
  890 BNE alive
  900 CMP R0,#3
  910 MOVEQ R9,#&FF
  920 B storecell
  930 .alive
  940 CMP R0,#2
  950 BCC dies
  960 CMP R0,#4
  970 BCS dies
  980 SUBS R9,R9,#1
  990 MOVEQ R9,#255
 1000 B storecell
 1010 .dies
 1020 MOV R9,#0
 1030 .storecell
 1040 STRB R9,[R11,R10]
 1050 ADD R3,R9,R9,LSL#8
 1060 ORR R3,R3,R3,LSL#8
 1070 STR R3,[R7],#-4
 1080 STR R3,[R7,#324]
 1090 STR R3,[R7,#644]
 1100 SUBS R1,R1,#1
 1110 BNE loop2
 1120 SUBS R2,R2,#1
 1130 BNE loop1
 1140 LDMIA R13!,{PC}
 1150 .clear
 1160 ADR R0,map
 1170 MOV R1,#0
 1180 STR R1,[R0]
 1190 ADR R0,map+4
 1200 MOV R1,#&2000
 1210 SUBS R1,R1,#4
 1220 MOV R2,#0
 1230 .clearloop
 1240 STR R2,[R0,R1]
 1250 SUBS R1,R1,#4
 1260 BPL clearloop
 1270 MOV PC,R14
 1280 .map
 1290 ]:NEXT
 1300 *FX 229,1
 1310 MODE 13
 1320 OFF
 1330 RECTANGLE 0,4,1019,1019
 1340 RECTANGLE 8,12,1003,1003
 1350 VDU 24,16;16;1007;1007;29,0;4;28,32,31,39,0
 1360 *POINTER 1
 1370 MOUSE RECTANGLE 24,24,983,983
 1380 M%=map+4
 1390 ENDPROC
 1400 :
 1410 DEFPROCp(F%,X%,Y%)
 1420 IF F% ELSE ENDPROC
 1430 M%?((1008-FNa(Y%)<<2)+X%/16)=(4=F%)
 1440 MOVE FNa(X%),FNa(Y%)
 1450 PLOT 97-2*(2=F%),8,8
 1460 ENDPROC
 1470 :
 1480 DEFFNa(X%)=X% AND &FF0
